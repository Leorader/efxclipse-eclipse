/*
 * generated by Xtext
 */
grammar InternalLDef;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.fx.code.editor.ldef.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.fx.code.editor.ldef.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.fx.code.editor.ldef.services.LDefGrammarAccess;

}

@parser::members {

 	private LDefGrammarAccess grammarAccess;
 	
    public InternalLDefParser(TokenStream input, LDefGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Root";	
   	}
   	
   	@Override
   	protected LDefGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	 iv_ruleRoot=ruleRoot 
	 { $current=$iv_ruleRoot.current; } 
	 EOF 
;

// Rule Root
ruleRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getLanguageDefinitionLanguageDefParserRuleCall_3_0()); 
	    }
		lv_languageDefinition_3_0=ruleLanguageDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"languageDefinition",
        		lv_languageDefinition_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.LanguageDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLanguageDef
entryRuleLanguageDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageDefRule()); }
	 iv_ruleLanguageDef=ruleLanguageDef 
	 { $current=$iv_ruleLanguageDef.current; } 
	 EOF 
;

// Rule LanguageDef
ruleLanguageDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getLanguageDefAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageDefAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getParitioningParitioningParserRuleCall_2_0()); 
	    }
		lv_paritioning_2_0=ruleParitioning		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"paritioning",
        		lv_paritioning_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Paritioning");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getLexicalHighlightingLexicalHighlightingParserRuleCall_3_0()); 
	    }
		lv_lexicalHighlighting_3_0=ruleLexicalHighlighting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"lexicalHighlighting",
        		lv_lexicalHighlighting_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.LexicalHighlighting");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getIntegrationIntegrationParserRuleCall_4_0()); 
	    }
		lv_integration_4_0=ruleIntegration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"integration",
        		lv_integration_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Integration");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLanguageDefAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleIntegration
entryRuleIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegrationRule()); }
	 iv_ruleIntegration=ruleIntegration 
	 { $current=$iv_ruleIntegration.current; } 
	 EOF 
;

// Rule Integration
ruleIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='integration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegrationAccess().getIntegrationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegrationAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegrationAccess().getCodeIntegrationListCodeIntegrationParserRuleCall_2_0()); 
	    }
		lv_codeIntegrationList_2_0=ruleCodeIntegration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegrationRule());
	        }
       		add(
       			$current, 
       			"codeIntegrationList",
        		lv_codeIntegrationList_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.CodeIntegration");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegrationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCodeIntegration
entryRuleCodeIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeIntegrationRule()); }
	 iv_ruleCodeIntegration=ruleCodeIntegration 
	 { $current=$iv_ruleCodeIntegration.current; } 
	 EOF 
;

// Rule CodeIntegration
ruleCodeIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCodeIntegrationAccess().getJavaFXIntegrationParserRuleCall()); 
    }
    this_JavaFXIntegration_0=ruleJavaFXIntegration
    { 
        $current = $this_JavaFXIntegration_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJavaFXIntegration
entryRuleJavaFXIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaFXIntegrationRule()); }
	 iv_ruleJavaFXIntegration=ruleJavaFXIntegration 
	 { $current=$iv_ruleJavaFXIntegration.current; } 
	 EOF 
;

// Rule JavaFXIntegration
ruleJavaFXIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='javafx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaFXIntegrationAccess().getJavafxKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJavaFXIntegrationAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJavaFXIntegrationAccess().getCodegenerationListCodegenerationParserRuleCall_2_0()); 
	    }
		lv_codegenerationList_2_0=ruleCodegeneration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJavaFXIntegrationRule());
	        }
       		add(
       			$current, 
       			"codegenerationList",
        		lv_codegenerationList_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Codegeneration");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJavaFXIntegrationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCodegeneration
entryRuleCodegeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodegenerationRule()); }
	 iv_ruleCodegeneration=ruleCodegeneration 
	 { $current=$iv_ruleCodegeneration.current; } 
	 EOF 
;

// Rule Codegeneration
ruleCodegeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCodegenerationAccess().getJavaCodeGenerationParserRuleCall_0()); 
    }
    this_JavaCodeGeneration_0=ruleJavaCodeGeneration
    { 
        $current = $this_JavaCodeGeneration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCodegenerationAccess().getE4CodeGenerationParserRuleCall_1()); 
    }
    this_E4CodeGeneration_1=ruleE4CodeGeneration
    { 
        $current = $this_E4CodeGeneration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJavaCodeGeneration
entryRuleJavaCodeGeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaCodeGenerationRule()); }
	 iv_ruleJavaCodeGeneration=ruleJavaCodeGeneration 
	 { $current=$iv_ruleJavaCodeGeneration.current; } 
	 EOF 
;

// Rule JavaCodeGeneration
ruleJavaCodeGeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='java' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaCodeGenerationAccess().getJavaKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJavaCodeGenerationAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaCodeGenerationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJavaCodeGenerationAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJavaCodeGenerationAccess().getConfigValueConfigValueParserRuleCall_2_1_0()); 
	    }
		lv_configValue_3_0=ruleConfigValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJavaCodeGenerationRule());
	        }
       		add(
       			$current, 
       			"configValue",
        		lv_configValue_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ConfigValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJavaCodeGenerationAccess().getRightCurlyBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleE4CodeGeneration
entryRuleE4CodeGeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE4CodeGenerationRule()); }
	 iv_ruleE4CodeGeneration=ruleE4CodeGeneration 
	 { $current=$iv_ruleE4CodeGeneration.current; } 
	 EOF 
;

// Rule E4CodeGeneration
ruleE4CodeGeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='e4' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getE4CodeGenerationAccess().getE4Keyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getE4CodeGenerationAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE4CodeGenerationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getE4CodeGenerationAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE4CodeGenerationAccess().getConfigValueConfigValueParserRuleCall_2_1_0()); 
	    }
		lv_configValue_3_0=ruleConfigValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4CodeGenerationRule());
	        }
       		add(
       			$current, 
       			"configValue",
        		lv_configValue_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ConfigValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getE4CodeGenerationAccess().getRightCurlyBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleConfigValue
entryRuleConfigValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigValueRule()); }
	 iv_ruleConfigValue=ruleConfigValue 
	 { $current=$iv_ruleConfigValue.current; } 
	 EOF 
;

// Rule ConfigValue
ruleConfigValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getConfigValueAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigValueAccess().getColonKeyword_1());
    }
((
(
		lv_simpleValue_2_0=RULE_STRING
		{
			newLeafNode(lv_simpleValue_2_0, grammarAccess.getConfigValueAccess().getSimpleValueSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleValue",
        		lv_simpleValue_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConfigValueAccess().getLeftCurlyBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigValueAccess().getChildrenConfigValueParserRuleCall_2_1_1_0()); 
	    }
		lv_children_4_0=ruleConfigValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigValueRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ConfigValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConfigValueAccess().getRightCurlyBracketKeyword_2_1_2());
    }
)))
;





// Entry rule entryRuleParitioning
entryRuleParitioning returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParitioningRule()); }
	 iv_ruleParitioning=ruleParitioning 
	 { $current=$iv_ruleParitioning.current; } 
	 EOF 
;

// Rule Paritioning
ruleParitioning returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='partitioning' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParitioningAccess().getPartitioningKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParitioningAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParitioningAccess().getPartitionsPartitionParserRuleCall_2_0()); 
	    }
		lv_partitions_2_0=rulePartition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParitioningRule());
	        }
       		add(
       			$current, 
       			"partitions",
        		lv_partitions_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Partition");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getParitioningAccess().getPartitionerPartitionerParserRuleCall_3_0()); 
	    }
		lv_partitioner_3_0=rulePartitioner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParitioningRule());
	        }
       		set(
       			$current, 
       			"partitioner",
        		lv_partitioner_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Partitioner");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParitioningAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePartition
entryRulePartition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitionRule()); }
	 iv_rulePartition=rulePartition 
	 { $current=$iv_rulePartition.current; } 
	 EOF 
;

// Rule Partition
rulePartition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='partition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartitionAccess().getPartitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRulePartitioner
entryRulePartitioner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitionerRule()); }
	 iv_rulePartitioner=rulePartitioner 
	 { $current=$iv_rulePartitioner.current; } 
	 EOF 
;

// Rule Partitioner
rulePartitioner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPartitionerAccess().getPartitioner_RuleParserRuleCall_0()); 
    }
    this_Partitioner_Rule_0=rulePartitioner_Rule
    { 
        $current = $this_Partitioner_Rule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPartitionerAccess().getParitioner_JSParserRuleCall_1()); 
    }
    this_Paritioner_JS_1=ruleParitioner_JS
    { 
        $current = $this_Paritioner_JS_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParitioner_JS
entryRuleParitioner_JS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParitioner_JSRule()); }
	 iv_ruleParitioner_JS=ruleParitioner_JS 
	 { $current=$iv_ruleParitioner_JS.current; } 
	 EOF 
;

// Rule Paritioner_JS
ruleParitioner_JS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParitioner_JSAccess().getScriptKeyword_0());
    }
(
(
		lv_scriptURI_1_0=RULE_STRING
		{
			newLeafNode(lv_scriptURI_1_0, grammarAccess.getParitioner_JSAccess().getScriptURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParitioner_JSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scriptURI",
        		lv_scriptURI_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRulePartitioner_Rule
entryRulePartitioner_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitioner_RuleRule()); }
	 iv_rulePartitioner_Rule=rulePartitioner_Rule 
	 { $current=$iv_rulePartitioner_Rule.current; } 
	 EOF 
;

// Rule Partitioner_Rule
rulePartitioner_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartitioner_RuleAccess().getRuleKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPartitioner_RuleAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartitioner_RuleAccess().getRuleListPartition_RuleParserRuleCall_2_0()); 
	    }
		lv_ruleList_2_0=rulePartition_Rule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartitioner_RuleRule());
	        }
       		add(
       			$current, 
       			"ruleList",
        		lv_ruleList_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Partition_Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartitioner_RuleAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePartition_Rule
entryRulePartition_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_RuleRule()); }
	 iv_rulePartition_Rule=rulePartition_Rule 
	 { $current=$iv_rulePartition_Rule.current; } 
	 EOF 
;

// Rule Partition_Rule
rulePartition_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPartition_RuleAccess().getPartition_SingleLineRuleParserRuleCall_0()); 
    }
    this_Partition_SingleLineRule_0=rulePartition_SingleLineRule
    { 
        $current = $this_Partition_SingleLineRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPartition_RuleAccess().getPartition_MultiLineRuleParserRuleCall_1()); 
    }
    this_Partition_MultiLineRule_1=rulePartition_MultiLineRule
    { 
        $current = $this_Partition_MultiLineRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPartition_RuleAccess().getPartition_JSRuleParserRuleCall_2()); 
    }
    this_Partition_JSRule_2=rulePartition_JSRule
    { 
        $current = $this_Partition_JSRule_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePartition_SingleLineRule
entryRulePartition_SingleLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_SingleLineRuleRule()); }
	 iv_rulePartition_SingleLineRule=rulePartition_SingleLineRule 
	 { $current=$iv_rulePartition_SingleLineRule.current; } 
	 EOF 
;

// Rule Partition_SingleLineRule
rulePartition_SingleLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='single_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartition_SingleLineRuleAccess().getSingle_lineKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPartition_SingleLineRuleAccess().getParitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_startSeq_2_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_2_0, grammarAccess.getPartition_SingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_3='pattern' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartition_SingleLineRuleAccess().getPatternKeyword_3_0());
    }
(
(
		lv_startPattern_4_0=RULE_STRING
		{
			newLeafNode(lv_startPattern_4_0, grammarAccess.getPartition_SingleLineRuleAccess().getStartPatternSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startPattern",
        		lv_startPattern_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_startSuffix_5_0=RULE_STRING
		{
			newLeafNode(lv_startSuffix_5_0, grammarAccess.getPartition_SingleLineRuleAccess().getStartSuffixSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSuffix",
        		lv_startSuffix_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_6='col' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartition_SingleLineRuleAccess().getColKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartition_SingleLineRuleAccess().getCheckCheckParserRuleCall_4_1_0()); 
	    }
		lv_check_7_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_7_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='=>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPartition_SingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_5_0());
    }
(
(
		lv_endSeq_9_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_9_0, grammarAccess.getPartition_SingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)?)?(	otherlv_10='escaped' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPartition_SingleLineRuleAccess().getEscapedKeyword_6_0());
    }
	otherlv_11='by' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPartition_SingleLineRuleAccess().getByKeyword_6_1());
    }
(
(
		lv_escapeSeq_12_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_12_0, grammarAccess.getPartition_SingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_12_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
;





// Entry rule entryRulePartition_MultiLineRule
entryRulePartition_MultiLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_MultiLineRuleRule()); }
	 iv_rulePartition_MultiLineRule=rulePartition_MultiLineRule 
	 { $current=$iv_rulePartition_MultiLineRule.current; } 
	 EOF 
;

// Rule Partition_MultiLineRule
rulePartition_MultiLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='multi_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartition_MultiLineRuleAccess().getMulti_lineKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPartition_MultiLineRuleAccess().getParitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_startSeq_2_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_2_0, grammarAccess.getPartition_MultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_3='pattern' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartition_MultiLineRuleAccess().getPatternKeyword_3_0());
    }
(
(
		lv_startPattern_4_0=RULE_STRING
		{
			newLeafNode(lv_startPattern_4_0, grammarAccess.getPartition_MultiLineRuleAccess().getStartPatternSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startPattern",
        		lv_startPattern_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_startSuffix_5_0=RULE_STRING
		{
			newLeafNode(lv_startSuffix_5_0, grammarAccess.getPartition_MultiLineRuleAccess().getStartSuffixSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSuffix",
        		lv_startSuffix_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_6='col' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartition_MultiLineRuleAccess().getColKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartition_MultiLineRuleAccess().getCheckCheckParserRuleCall_4_1_0()); 
	    }
		lv_check_7_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_7_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='=>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPartition_MultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_5());
    }
(
(
		lv_endSeq_9_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_9_0, grammarAccess.getPartition_MultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_10='escaped' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPartition_MultiLineRuleAccess().getEscapedKeyword_7_0());
    }
	otherlv_11='by' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPartition_MultiLineRuleAccess().getByKeyword_7_1());
    }
(
(
		lv_escapeSeq_12_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_12_0, grammarAccess.getPartition_MultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_12_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
;





// Entry rule entryRulePartition_JSRule
entryRulePartition_JSRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_JSRuleRule()); }
	 iv_rulePartition_JSRule=rulePartition_JSRule 
	 { $current=$iv_rulePartition_JSRule.current; } 
	 EOF 
;

// Rule Partition_JSRule
rulePartition_JSRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartition_JSRuleAccess().getScriptKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_JSRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPartition_JSRuleAccess().getParitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_fileURI_2_0=RULE_STRING
		{
			newLeafNode(lv_fileURI_2_0, grammarAccess.getPartition_JSRuleAccess().getFileURISTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_JSRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileURI",
        		lv_fileURI_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_3='col' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartition_JSRuleAccess().getColKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartition_JSRuleAccess().getCheckCheckParserRuleCall_3_1_0()); 
	    }
		lv_check_4_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartition_JSRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLexicalHighlighting
entryRuleLexicalHighlighting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalHighlightingRule()); }
	 iv_ruleLexicalHighlighting=ruleLexicalHighlighting 
	 { $current=$iv_ruleLexicalHighlighting.current; } 
	 EOF 
;

// Rule LexicalHighlighting
ruleLexicalHighlighting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lexical_highlighting' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalHighlightingAccess().getLexical_highlightingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLexicalHighlightingAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalHighlightingAccess().getListLexicalPartitionHighlightingParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleLexicalPartitionHighlighting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalHighlightingRule());
	        }
       		add(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.LexicalPartitionHighlighting");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalHighlightingAccess().getVistualTokenVisualsParserRuleCall_3_0()); 
	    }
		lv_vistual_3_0=ruleTokenVisuals		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalHighlightingRule());
	        }
       		set(
       			$current, 
       			"vistual",
        		lv_vistual_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.TokenVisuals");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLexicalHighlightingAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTokenVisuals
entryRuleTokenVisuals returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenVisualsRule()); }
	 iv_ruleTokenVisuals=ruleTokenVisuals 
	 { $current=$iv_ruleTokenVisuals.current; } 
	 EOF 
;

// Rule TokenVisuals
ruleTokenVisuals returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='token_def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTokenVisualsAccess().getToken_defKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTokenVisualsAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTokenVisualsAccess().getTokenVisualsTokenVisualParserRuleCall_2_0_0()); 
	    }
		lv_tokenVisuals_2_0=ruleTokenVisual		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenVisualsRule());
	        }
       		add(
       			$current, 
       			"tokenVisuals",
        		lv_tokenVisuals_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.TokenVisual");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTokenVisualsAccess().getSemicolonKeyword_2_1());
    }
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTokenVisualsAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleTokenVisual
entryRuleTokenVisual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenVisualRule()); }
	 iv_ruleTokenVisual=ruleTokenVisual 
	 { $current=$iv_ruleTokenVisual.current; } 
	 EOF 
;

// Rule TokenVisual
ruleTokenVisual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenVisualRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTokenVisualAccess().getTokenTokenCrossReference_0_0()); 
	}

)
)(
(
		lv_colorSpec_1_0=RULE_STRING
		{
			newLeafNode(lv_colorSpec_1_0, grammarAccess.getTokenVisualAccess().getColorSpecSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenVisualRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"colorSpec",
        		lv_colorSpec_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_bold_2_0=	'bold' 
    {
        newLeafNode(lv_bold_2_0, grammarAccess.getTokenVisualAccess().getBoldBoldKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenVisualRule());
	        }
       		setWithLastConsumed($current, "bold", true, "bold");
	    }

)
)?(
(
		lv_italic_3_0=	'italic' 
    {
        newLeafNode(lv_italic_3_0, grammarAccess.getTokenVisualAccess().getItalicItalicKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenVisualRule());
	        }
       		setWithLastConsumed($current, "italic", true, "italic");
	    }

)
)?)
;





// Entry rule entryRuleLexicalPartitionHighlighting
entryRuleLexicalPartitionHighlighting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlightingRule()); }
	 iv_ruleLexicalPartitionHighlighting=ruleLexicalPartitionHighlighting 
	 { $current=$iv_ruleLexicalPartitionHighlighting.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting
ruleLexicalPartitionHighlighting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLexicalPartitionHighlightingAccess().getLexicalPartitionHighlighting_RuleParserRuleCall_0()); 
    }
    this_LexicalPartitionHighlighting_Rule_0=ruleLexicalPartitionHighlighting_Rule
    { 
        $current = $this_LexicalPartitionHighlighting_Rule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLexicalPartitionHighlightingAccess().getLexicalPartitionHighlighting_JSParserRuleCall_1()); 
    }
    this_LexicalPartitionHighlighting_JS_1=ruleLexicalPartitionHighlighting_JS
    { 
        $current = $this_LexicalPartitionHighlighting_JS_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLexicalPartitionHighlighting_JS
entryRuleLexicalPartitionHighlighting_JS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_JSRule()); }
	 iv_ruleLexicalPartitionHighlighting_JS=ruleLexicalPartitionHighlighting_JS 
	 { $current=$iv_ruleLexicalPartitionHighlighting_JS.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting_JS
ruleLexicalPartitionHighlighting_JS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getScriptKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_JSRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getPartitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_scriptURI_2_0=RULE_STRING
		{
			newLeafNode(lv_scriptURI_2_0, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getScriptURISTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_JSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scriptURI",
        		lv_scriptURI_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleLexicalPartitionHighlighting_Rule
entryRuleLexicalPartitionHighlighting_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleRule()); }
	 iv_ruleLexicalPartitionHighlighting_Rule=ruleLexicalPartitionHighlighting_Rule 
	 { $current=$iv_ruleLexicalPartitionHighlighting_Rule.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting_Rule
ruleLexicalPartitionHighlighting_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getRuleKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getPartitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getWhitespaceWhitespaceRuleParserRuleCall_2_0()); 
	    }
		lv_whitespace_2_0=ruleWhitespaceRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
       		set(
       			$current, 
       			"whitespace",
        		lv_whitespace_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.WhitespaceRule");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getTokenListTokenParserRuleCall_4_0()); 
	    }
		lv_tokenList_4_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
       		add(
       			$current, 
       			"tokenList",
        		lv_tokenList_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Token");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	 iv_ruleToken=ruleToken 
	 { $current=$iv_ruleToken.current; } 
	 EOF 
;

// Rule Token
ruleToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_default_0_0=	'default' 
    {
        newLeafNode(lv_default_0_0, grammarAccess.getTokenAccess().getDefaultDefaultKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed($current, "default", true, "default");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getScannerListScannerParserRuleCall_2_1_0()); 
	    }
		lv_scannerList_3_0=ruleScanner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		add(
       			$current, 
       			"scannerList",
        		lv_scannerList_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Scanner");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleScanner
entryRuleScanner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerRule()); }
	 iv_ruleScanner=ruleScanner 
	 { $current=$iv_ruleScanner.current; } 
	 EOF 
;

// Rule Scanner
ruleScanner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScannerAccess().getScanner_KeywordParserRuleCall_0()); 
    }
    this_Scanner_Keyword_0=ruleScanner_Keyword
    { 
        $current = $this_Scanner_Keyword_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScannerAccess().getScanner_RuleParserRuleCall_1()); 
    }
    this_Scanner_Rule_1=ruleScanner_Rule
    { 
        $current = $this_Scanner_Rule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScanner_Keyword
entryRuleScanner_Keyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_KeywordRule()); }
	 iv_ruleScanner_Keyword=ruleScanner_Keyword 
	 { $current=$iv_ruleScanner_Keyword.current; } 
	 EOF 
;

// Rule Scanner_Keyword
ruleScanner_Keyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='keywords' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_KeywordAccess().getKeywordsKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScanner_KeywordAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_KeywordAccess().getKeywordsKeywordParserRuleCall_2_0()); 
	    }
		lv_keywords_2_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_KeywordRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScanner_KeywordAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_KeywordAccess().getKeywordsKeywordParserRuleCall_3_1_0()); 
	    }
		lv_keywords_4_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_KeywordRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_KeywordAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_6='enabledif' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScanner_KeywordAccess().getEnabledifKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_KeywordAccess().getEnabledIfScannerConditionParserRuleCall_5_1_0()); 
	    }
		lv_enabledIf_7_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_KeywordRule());
	        }
       		set(
       			$current, 
       			"enabledIf",
        		lv_enabledIf_7_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	 iv_ruleKeyword=ruleKeyword 
	 { $current=$iv_ruleKeyword.current; } 
	 EOF 
;

// Rule Keyword
ruleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getKeywordAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_1='since' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKeywordAccess().getSinceKeyword_1_0());
    }
(
(
		lv_version_2_0=RULE_STRING
		{
			newLeafNode(lv_version_2_0, grammarAccess.getKeywordAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
;





// Entry rule entryRuleScanner_Rule
entryRuleScanner_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_RuleRule()); }
	 iv_ruleScanner_Rule=ruleScanner_Rule 
	 { $current=$iv_ruleScanner_Rule.current; } 
	 EOF 
;

// Rule Scanner_Rule
ruleScanner_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_SingleLineRuleParserRuleCall_0()); 
    }
    this_Scanner_SingleLineRule_0=ruleScanner_SingleLineRule
    { 
        $current = $this_Scanner_SingleLineRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_MultiLineRuleParserRuleCall_1()); 
    }
    this_Scanner_MultiLineRule_1=ruleScanner_MultiLineRule
    { 
        $current = $this_Scanner_MultiLineRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_CharacterRuleParserRuleCall_2()); 
    }
    this_Scanner_CharacterRule_2=ruleScanner_CharacterRule
    { 
        $current = $this_Scanner_CharacterRule_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_JSRuleParserRuleCall_3()); 
    }
    this_Scanner_JSRule_3=ruleScanner_JSRule
    { 
        $current = $this_Scanner_JSRule_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_PatternRuleParserRuleCall_4()); 
    }
    this_Scanner_PatternRule_4=ruleScanner_PatternRule
    { 
        $current = $this_Scanner_PatternRule_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScanner_SingleLineRule
entryRuleScanner_SingleLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_SingleLineRuleRule()); }
	 iv_ruleScanner_SingleLineRule=ruleScanner_SingleLineRule 
	 { $current=$iv_ruleScanner_SingleLineRule.current; } 
	 EOF 
;

// Rule Scanner_SingleLineRule
ruleScanner_SingleLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='single_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_SingleLineRuleAccess().getSingle_lineKeyword_0());
    }
(
(
		lv_startSeq_1_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_1_0, grammarAccess.getScanner_SingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_2='pattern' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScanner_SingleLineRuleAccess().getPatternKeyword_2_0());
    }
(
(
		lv_startPattern_3_0=RULE_STRING
		{
			newLeafNode(lv_startPattern_3_0, grammarAccess.getScanner_SingleLineRuleAccess().getStartPatternSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startPattern",
        		lv_startPattern_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_startSuffix_4_0=RULE_STRING
		{
			newLeafNode(lv_startSuffix_4_0, grammarAccess.getScanner_SingleLineRuleAccess().getStartSuffixSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSuffix",
        		lv_startSuffix_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_5='col' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_SingleLineRuleAccess().getColKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_SingleLineRuleAccess().getCheckCheckParserRuleCall_3_1_0()); 
	    }
		lv_check_6_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_6_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='=>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScanner_SingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_4_0());
    }
(
(
		lv_endSeq_8_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_8_0, grammarAccess.getScanner_SingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)?)?(	otherlv_9='escaped' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getScanner_SingleLineRuleAccess().getEscapedKeyword_5_0());
    }
	otherlv_10='by' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScanner_SingleLineRuleAccess().getByKeyword_5_1());
    }
(
(
		lv_escapeSeq_11_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_11_0, grammarAccess.getScanner_SingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_11_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_12='enabledif' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScanner_SingleLineRuleAccess().getEnabledifKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_SingleLineRuleAccess().getEnabledIfScannerConditionParserRuleCall_6_1_0()); 
	    }
		lv_enabledIf_13_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		set(
       			$current, 
       			"enabledIf",
        		lv_enabledIf_13_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleScanner_MultiLineRule
entryRuleScanner_MultiLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_MultiLineRuleRule()); }
	 iv_ruleScanner_MultiLineRule=ruleScanner_MultiLineRule 
	 { $current=$iv_ruleScanner_MultiLineRule.current; } 
	 EOF 
;

// Rule Scanner_MultiLineRule
ruleScanner_MultiLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='multi_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_MultiLineRuleAccess().getMulti_lineKeyword_0());
    }
(
(
		lv_startSeq_1_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_1_0, grammarAccess.getScanner_MultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_2='pattern' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScanner_MultiLineRuleAccess().getPatternKeyword_2_0());
    }
(
(
		lv_startPattern_3_0=RULE_STRING
		{
			newLeafNode(lv_startPattern_3_0, grammarAccess.getScanner_MultiLineRuleAccess().getStartPatternSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startPattern",
        		lv_startPattern_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_startSuffix_4_0=RULE_STRING
		{
			newLeafNode(lv_startSuffix_4_0, grammarAccess.getScanner_MultiLineRuleAccess().getStartSuffixSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSuffix",
        		lv_startSuffix_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_5='col' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_MultiLineRuleAccess().getColKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_MultiLineRuleAccess().getCheckCheckParserRuleCall_3_1_0()); 
	    }
		lv_check_6_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_6_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='=>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScanner_MultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_4());
    }
(
(
		lv_endSeq_8_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_8_0, grammarAccess.getScanner_MultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_9='escaped' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getScanner_MultiLineRuleAccess().getEscapedKeyword_6_0());
    }
	otherlv_10='by' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScanner_MultiLineRuleAccess().getByKeyword_6_1());
    }
(
(
		lv_escapeSeq_11_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_11_0, grammarAccess.getScanner_MultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_11_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_12='enabledif' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScanner_MultiLineRuleAccess().getEnabledifKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_MultiLineRuleAccess().getEnabledIfScannerConditionParserRuleCall_7_1_0()); 
	    }
		lv_enabledIf_13_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		set(
       			$current, 
       			"enabledIf",
        		lv_enabledIf_13_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleScanner_PatternRule
entryRuleScanner_PatternRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_PatternRuleRule()); }
	 iv_ruleScanner_PatternRule=ruleScanner_PatternRule 
	 { $current=$iv_ruleScanner_PatternRule.current; } 
	 EOF 
;

// Rule Scanner_PatternRule
ruleScanner_PatternRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='pattern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_PatternRuleAccess().getPatternKeyword_0());
    }
(
(
		lv_startPattern_1_0=RULE_STRING
		{
			newLeafNode(lv_startPattern_1_0, grammarAccess.getScanner_PatternRuleAccess().getStartPatternSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_PatternRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startPattern",
        		lv_startPattern_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		lv_length_2_0=RULE_INT
		{
			newLeafNode(lv_length_2_0, grammarAccess.getScanner_PatternRuleAccess().getLengthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_PatternRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_2_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?(	otherlv_3='col' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScanner_PatternRuleAccess().getColKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_PatternRuleAccess().getCheckCheckParserRuleCall_3_1_0()); 
	    }
		lv_check_4_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_PatternRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_4_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='containing' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_PatternRuleAccess().getContainingKeyword_4());
    }
(
(
		lv_contentPattern_6_0=RULE_STRING
		{
			newLeafNode(lv_contentPattern_6_0, grammarAccess.getScanner_PatternRuleAccess().getContentPatternSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_PatternRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contentPattern",
        		lv_contentPattern_6_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_7='enabledif' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScanner_PatternRuleAccess().getEnabledifKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_PatternRuleAccess().getEnabledIfScannerConditionParserRuleCall_6_1_0()); 
	    }
		lv_enabledIf_8_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_PatternRuleRule());
	        }
       		set(
       			$current, 
       			"enabledIf",
        		lv_enabledIf_8_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleScanner_CharacterRule
entryRuleScanner_CharacterRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_CharacterRuleRule()); }
	 iv_ruleScanner_CharacterRule=ruleScanner_CharacterRule 
	 { $current=$iv_ruleScanner_CharacterRule.current; } 
	 EOF 
;

// Rule Scanner_CharacterRule
ruleScanner_CharacterRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='character' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_CharacterRuleAccess().getCharacterKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScanner_CharacterRuleAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_characters_2_0=RULE_STRING
		{
			newLeafNode(lv_characters_2_0, grammarAccess.getScanner_CharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScanner_CharacterRuleAccess().getCommaKeyword_3_0());
    }
(
(
		lv_characters_4_0=RULE_STRING
		{
			newLeafNode(lv_characters_4_0, grammarAccess.getScanner_CharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_CharacterRuleAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_6='col' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScanner_CharacterRuleAccess().getColKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_CharacterRuleAccess().getCheckCheckParserRuleCall_5_1_0()); 
	    }
		lv_check_7_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_7_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='enabledif' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScanner_CharacterRuleAccess().getEnabledifKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_CharacterRuleAccess().getEnabledIfScannerConditionParserRuleCall_6_1_0()); 
	    }
		lv_enabledIf_9_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		set(
       			$current, 
       			"enabledIf",
        		lv_enabledIf_9_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleScanner_JSRule
entryRuleScanner_JSRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_JSRuleRule()); }
	 iv_ruleScanner_JSRule=ruleScanner_JSRule 
	 { $current=$iv_ruleScanner_JSRule.current; } 
	 EOF 
;

// Rule Scanner_JSRule
ruleScanner_JSRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_JSRuleAccess().getScriptKeyword_0());
    }
(
(
		lv_fileURI_1_0=RULE_STRING
		{
			newLeafNode(lv_fileURI_1_0, grammarAccess.getScanner_JSRuleAccess().getFileURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_JSRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileURI",
        		lv_fileURI_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_2='col' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScanner_JSRuleAccess().getColKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_JSRuleAccess().getCheckCheckParserRuleCall_2_1_0()); 
	    }
		lv_check_3_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_JSRuleRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_3_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.Check");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='enabledif' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScanner_JSRuleAccess().getEnabledifKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_JSRuleAccess().getConditionScannerConditionParserRuleCall_3_1_0()); 
	    }
		lv_condition_5_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_JSRuleRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_5_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleScannerCondition
entryRuleScannerCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerConditionRule()); }
	 iv_ruleScannerCondition=ruleScannerCondition 
	 { $current=$iv_ruleScannerCondition.current; } 
	 EOF 
;

// Rule ScannerCondition
ruleScannerCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScannerConditionAccess().getScannerConditionExistsParserRuleCall_0()); 
    }
    this_ScannerConditionExists_0=ruleScannerConditionExists
    { 
        $current = $this_ScannerConditionExists_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScannerConditionAccess().getScannerConditionEqualsParserRuleCall_1()); 
    }
    this_ScannerConditionEquals_1=ruleScannerConditionEquals
    { 
        $current = $this_ScannerConditionEquals_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScannerConditionAccess().getScannerConditionJsParserRuleCall_2()); 
    }
    this_ScannerConditionJs_2=ruleScannerConditionJs
    { 
        $current = $this_ScannerConditionJs_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScannerConditionAccess().getScannerConditionCompositeParserRuleCall_3()); 
    }
    this_ScannerConditionComposite_3=ruleScannerConditionComposite
    { 
        $current = $this_ScannerConditionComposite_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScannerConditionComposite
entryRuleScannerConditionComposite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerConditionCompositeRule()); }
	 iv_ruleScannerConditionComposite=ruleScannerConditionComposite 
	 { $current=$iv_ruleScannerConditionComposite.current; } 
	 EOF 
;

// Rule ScannerConditionComposite
ruleScannerConditionComposite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_op_0_1=	'and' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getScannerConditionCompositeAccess().getOpAndKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionCompositeRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_1, null);
	    }

    |		lv_op_0_2=	'or' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getScannerConditionCompositeAccess().getOpOrKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionCompositeRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_2, null);
	    }

)

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScannerConditionCompositeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScannerConditionCompositeAccess().getElementsScannerConditionParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleScannerCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScannerConditionCompositeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"org.eclipse.fx.code.editor.ldef.LDef.ScannerCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScannerConditionCompositeAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleScannerConditionExists
entryRuleScannerConditionExists returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerConditionExistsRule()); }
	 iv_ruleScannerConditionExists=ruleScannerConditionExists 
	 { $current=$iv_ruleScannerConditionExists.current; } 
	 EOF 
;

// Rule ScannerConditionExists
ruleScannerConditionExists returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getScannerConditionExistsAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionExistsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_1='exists' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScannerConditionExistsAccess().getExistsKeyword_1());
    }
)
;





// Entry rule entryRuleScannerConditionEquals
entryRuleScannerConditionEquals returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerConditionEqualsRule()); }
	 iv_ruleScannerConditionEquals=ruleScannerConditionEquals 
	 { $current=$iv_ruleScannerConditionEquals.current; } 
	 EOF 
;

// Rule ScannerConditionEquals
ruleScannerConditionEquals returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getScannerConditionEqualsAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionEqualsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_1='eq' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScannerConditionEqualsAccess().getEqKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getScannerConditionEqualsAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionEqualsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleScannerConditionJs
entryRuleScannerConditionJs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerConditionJsRule()); }
	 iv_ruleScannerConditionJs=ruleScannerConditionJs 
	 { $current=$iv_ruleScannerConditionJs.current; } 
	 EOF 
;

// Rule ScannerConditionJs
ruleScannerConditionJs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScannerConditionJsAccess().getScriptKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getScannerConditionJsAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScannerConditionJsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	 iv_ruleCheck=ruleCheck 
	 { $current=$iv_ruleCheck.current; } 
	 EOF 
;

// Rule Check
ruleCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCheckAccess().getRangeParserRuleCall_0()); 
    }
    this_Range_0=ruleRange
    { 
        $current = $this_Range_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCheckAccess().getEqualsParserRuleCall_1()); 
    }
    this_Equals_1=ruleEquals
    { 
        $current = $this_Equals_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEquals
entryRuleEquals returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualsRule()); }
	 iv_ruleEquals=ruleEquals 
	 { $current=$iv_ruleEquals.current; } 
	 EOF 
;

// Rule Equals
ruleEquals returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='eq' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEqualsAccess().getEqKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getEqualsAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='in' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getInKeyword_0());
    }
(
(
(
		lv_ltIncl_1_1=	'(' 
    {
        newLeafNode(lv_ltIncl_1_1, grammarAccess.getRangeAccess().getLtInclLeftParenthesisKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "ltIncl", lv_ltIncl_1_1, null);
	    }

    |		lv_ltIncl_1_2=	'[' 
    {
        newLeafNode(lv_ltIncl_1_2, grammarAccess.getRangeAccess().getLtInclLeftSquareBracketKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "ltIncl", lv_ltIncl_1_2, null);
	    }

)

)
)(
(
		lv_minValue_2_0=RULE_INT
		{
			newLeafNode(lv_minValue_2_0, grammarAccess.getRangeAccess().getMinValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"minValue",
        		lv_minValue_2_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRangeAccess().getCommaKeyword_3());
    }
(
(
		lv_maxValue_4_0=RULE_INT
		{
			newLeafNode(lv_maxValue_4_0, grammarAccess.getRangeAccess().getMaxValueINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"maxValue",
        		lv_maxValue_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?(
(
(
		lv_gtIncl_5_1=	')' 
    {
        newLeafNode(lv_gtIncl_5_1, grammarAccess.getRangeAccess().getGtInclRightParenthesisKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "gtIncl", lv_gtIncl_5_1, null);
	    }

    |		lv_gtIncl_5_2=	']' 
    {
        newLeafNode(lv_gtIncl_5_2, grammarAccess.getRangeAccess().getGtInclRightSquareBracketKeyword_5_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "gtIncl", lv_gtIncl_5_2, null);
	    }

)

)
))
;





// Entry rule entryRuleWhitespaceRule
entryRuleWhitespaceRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhitespaceRuleRule()); }
	 iv_ruleWhitespaceRule=ruleWhitespaceRule 
	 { $current=$iv_ruleWhitespaceRule.current; } 
	 EOF 
;

// Rule WhitespaceRule
ruleWhitespaceRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='whitespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhitespaceRuleAccess().getWhitespaceKeyword_0());
    }
((	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhitespaceRuleAccess().getLeftSquareBracketKeyword_1_0_0());
    }
(
(
		lv_characters_2_0=RULE_STRING
		{
			newLeafNode(lv_characters_2_0, grammarAccess.getWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhitespaceRuleAccess().getCommaKeyword_1_0_2_0());
    }
(
(
		lv_characters_4_0=RULE_STRING
		{
			newLeafNode(lv_characters_4_0, grammarAccess.getWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_1_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWhitespaceRuleAccess().getRightSquareBracketKeyword_1_0_3());
    }
)
    |(
(
		lv_javawhitespace_6_0=	'javawhitespace' 
    {
        newLeafNode(lv_javawhitespace_6_0, grammarAccess.getWhitespaceRuleAccess().getJavawhitespaceJavawhitespaceKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		setWithLastConsumed($current, "javawhitespace", true, "javawhitespace");
	    }

)
)
    |(
(
		lv_fileURI_7_0=RULE_STRING
		{
			newLeafNode(lv_fileURI_7_0, grammarAccess.getWhitespaceRuleAccess().getFileURISTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileURI",
        		lv_fileURI_7_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


