/*
* generated by Xtext
*/
grammar InternalCssExtDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.bestsolution.efxclipse.tooling.css.cssext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.bestsolution.efxclipse.tooling.css.cssext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.bestsolution.efxclipse.tooling.css.cssext.services.CssExtDslGrammarAccess;

}

@parser::members {

 	private CssExtDslGrammarAccess grammarAccess;
 	
    public InternalCssExtDslParser(TokenStream input, CssExtDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CssExtension";	
   	}
   	
   	@Override
   	protected CssExtDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCssExtension
entryRuleCssExtension returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCssExtensionRule()); }
	 iv_ruleCssExtension=ruleCssExtension 
	 { $current=$iv_ruleCssExtension.current; } 
	 EOF 
;

// Rule CssExtension
ruleCssExtension returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCssExtensionAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCssExtensionRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCssExtensionAccess().getPackageDefPackageDefinitionParserRuleCall_1_0()); 
	    }
		lv_packageDef_1_0=rulePackageDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCssExtensionRule());
	        }
       		set(
       			$current, 
       			"packageDef",
        		lv_packageDef_1_0, 
        		"PackageDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRulePackageDefinition
entryRulePackageDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDefinitionRule()); }
	 iv_rulePackageDefinition=rulePackageDefinition 
	 { $current=$iv_rulePackageDefinition.current; } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getDokuDokuParserRuleCall_0_0_0()); 
	    }
		lv_doku_0_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_0_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getPackageDefinitionAccess().getWSTerminalRuleCall_0_1()); 
    }
)*)?	otherlv_2='package' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDefinitionAccess().getPackageKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_3_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getRulesCSSRuleDefinitionParserRuleCall_4_0_0()); 
	    }
		lv_rules_5_0=ruleCSSRuleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_5_0, 
        		"CSSRuleDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getSubpackagesPackageDefinitionParserRuleCall_4_1_0()); 
	    }
		lv_subpackages_6_0=rulePackageDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		add(
       			$current, 
       			"subpackages",
        		lv_subpackages_6_0, 
        		"PackageDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getElementsElementDefinitionParserRuleCall_4_2_0()); 
	    }
		lv_elements_7_0=ruleElementDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"ElementDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDoku
entryRuleDoku returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDokuRule()); }
	 iv_ruleDoku=ruleDoku 
	 { $current=$iv_ruleDoku.current; } 
	 EOF 
;

// Rule Doku
ruleDoku returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_content_0_0=RULE_JDOC
		{
			newLeafNode(lv_content_0_0, grammarAccess.getDokuAccess().getContentJDOCTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDokuRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_0_0, 
        		"JDOC");
	    }

)
)
;





// Entry rule entryRuleCSSBaseType
entryRuleCSSBaseType returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSBaseTypeRule()); }
	 iv_ruleCSSBaseType=ruleCSSBaseType 
	 { $current=$iv_ruleCSSBaseType.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSBaseType
ruleCSSBaseType returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCSSBaseTypeAccess().getCSSTypeParserRuleCall()); 
    }
    this_CSSType_0=ruleCSSType
    { 
        $current = $this_CSSType_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSType
entryRuleCSSType returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSTypeRule()); }
	 iv_ruleCSSType=ruleCSSType 
	 { $current=$iv_ruleCSSType.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSType
ruleCSSType returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSTypeAccess().getCSSRangedIntTypeAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSTypeAccess().getDokuDokuParserRuleCall_0_1_0_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSTypeRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_0_1_1()); 
    }
)*)?(
(
		lv_type_3_0=	'@INT' 
    {
        newLeafNode(lv_type_3_0, grammarAccess.getCSSTypeAccess().getTypeINTKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_0, "@INT");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCSSTypeAccess().getLeftParenthesisKeyword_0_3());
    }
(this_WS_5=RULE_WS
    { 
    newLeafNode(this_WS_5, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_0_4()); 
    }
)*(
(
		lv_from_6_0=RULE_INT
		{
			newLeafNode(lv_from_6_0, grammarAccess.getCSSTypeAccess().getFromINTTerminalRuleCall_0_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"from",
        		lv_from_6_0, 
        		"INT");
	    }

)
)(this_WS_7=RULE_WS
    { 
    newLeafNode(this_WS_7, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_0_6()); 
    }
)*	otherlv_8='->' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCSSTypeAccess().getHyphenMinusGreaterThanSignKeyword_0_7());
    }
(this_WS_9=RULE_WS
    { 
    newLeafNode(this_WS_9, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_0_8()); 
    }
)*(
(
		lv_to_10_0=RULE_INT
		{
			newLeafNode(lv_to_10_0, grammarAccess.getCSSTypeAccess().getToINTTerminalRuleCall_0_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"to",
        		lv_to_10_0, 
        		"INT");
	    }

)
)(this_WS_11=RULE_WS
    { 
    newLeafNode(this_WS_11, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_0_10()); 
    }
)*	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCSSTypeAccess().getRightParenthesisKeyword_0_11());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSTypeAccess().getCSSRangedDoubleTypeAction_1_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSTypeAccess().getDokuDokuParserRuleCall_1_1_0_0()); 
	    }
		lv_doku_14_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSTypeRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_14_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_15=RULE_WS
    { 
    newLeafNode(this_WS_15, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_1_1_1()); 
    }
)*)?(
(
		lv_type_16_0=	'@NUM' 
    {
        newLeafNode(lv_type_16_0, grammarAccess.getCSSTypeAccess().getTypeNUMKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_16_0, "@NUM");
	    }

)
)	otherlv_17='(' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCSSTypeAccess().getLeftParenthesisKeyword_1_3());
    }
(this_WS_18=RULE_WS
    { 
    newLeafNode(this_WS_18, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_1_4()); 
    }
)*(
(
		lv_from_19_0=RULE_DOUBLE
		{
			newLeafNode(lv_from_19_0, grammarAccess.getCSSTypeAccess().getFromDOUBLETerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"from",
        		lv_from_19_0, 
        		"DOUBLE");
	    }

)
)(this_WS_20=RULE_WS
    { 
    newLeafNode(this_WS_20, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_1_6()); 
    }
)*	otherlv_21='->' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getCSSTypeAccess().getHyphenMinusGreaterThanSignKeyword_1_7());
    }
(this_WS_22=RULE_WS
    { 
    newLeafNode(this_WS_22, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_1_8()); 
    }
)*(
(
		lv_to_23_0=RULE_DOUBLE
		{
			newLeafNode(lv_to_23_0, grammarAccess.getCSSTypeAccess().getToDOUBLETerminalRuleCall_1_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"to",
        		lv_to_23_0, 
        		"DOUBLE");
	    }

)
)(this_WS_24=RULE_WS
    { 
    newLeafNode(this_WS_24, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_1_10()); 
    }
)*	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getCSSTypeAccess().getRightParenthesisKeyword_1_11());
    }
)
    |(((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSTypeAccess().getDokuDokuParserRuleCall_2_0_0_0()); 
	    }
		lv_doku_26_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSTypeRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_26_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_27=RULE_WS
    { 
    newLeafNode(this_WS_27, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_2_0_1()); 
    }
)*)?(((
(
		lv_type_28_0=	'@INT' 
    {
        newLeafNode(lv_type_28_0, grammarAccess.getCSSTypeAccess().getTypeINTKeyword_2_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_28_0, "@INT");
	    }

)
)(this_WS_29=RULE_WS
    { 
    newLeafNode(this_WS_29, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_2_1_0_1()); 
    }
)*)
    |((
(
		lv_type_30_0=	'@NUM' 
    {
        newLeafNode(lv_type_30_0, grammarAccess.getCSSTypeAccess().getTypeNUMKeyword_2_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_30_0, "@NUM");
	    }

)
)(this_WS_31=RULE_WS
    { 
    newLeafNode(this_WS_31, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_2_1_1_1()); 
    }
)*)
    |((
(
		lv_type_32_0=	'@STRING' 
    {
        newLeafNode(lv_type_32_0, grammarAccess.getCSSTypeAccess().getTypeSTRINGKeyword_2_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_32_0, "@STRING");
	    }

)
)(this_WS_33=RULE_WS
    { 
    newLeafNode(this_WS_33, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_2_1_2_1()); 
    }
)*)
    |((
(
		lv_type_34_0=	'@URL' 
    {
        newLeafNode(lv_type_34_0, grammarAccess.getCSSTypeAccess().getTypeURLKeyword_2_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_34_0, "@URL");
	    }

)
)(this_WS_35=RULE_WS
    { 
    newLeafNode(this_WS_35, grammarAccess.getCSSTypeAccess().getWSTerminalRuleCall_2_1_3_1()); 
    }
)*))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleElementDefinition
entryRuleElementDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementDefinitionRule()); }
	 iv_ruleElementDefinition=ruleElementDefinition 
	 { $current=$iv_ruleElementDefinition.current; } 
	 EOF 
;

// Rule ElementDefinition
ruleElementDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElementDefinitionAccess().getElementDefinitionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getDokuDokuParserRuleCall_1_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementDefinitionRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementDefinitionAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getSuperElementDefinitionCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getElementDefinitionAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getSuperElementDefinitionCrossReference_3_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_7='styleclass' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getElementDefinitionAccess().getStyleclassKeyword_4_0());
    }
(
(
		lv_styleclass_8_0=RULE_ID
		{
			newLeafNode(lv_styleclass_8_0, grammarAccess.getElementDefinitionAccess().getStyleclassIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"styleclass",
        		lv_styleclass_8_0, 
        		"ID");
	    }

)
))?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getElementDefinitionAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getPropertiesPropertyDefinitionParserRuleCall_6_0_0()); 
	    }
		lv_properties_10_0=rulePropertyDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementDefinitionRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_10_0, 
        		"PropertyDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getPseudoClassesPseudoClassDefinitionParserRuleCall_6_1_0()); 
	    }
		lv_pseudoClasses_11_0=rulePseudoClassDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementDefinitionRule());
	        }
       		add(
       			$current, 
       			"pseudoClasses",
        		lv_pseudoClasses_11_0, 
        		"PseudoClassDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getElementDefinitionAccess().getSubstructuresSubstructureParserRuleCall_6_2_0()); 
	    }
		lv_substructures_12_0=ruleSubstructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementDefinitionRule());
	        }
       		add(
       			$current, 
       			"substructures",
        		lv_substructures_12_0, 
        		"Substructure");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getElementDefinitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDefinitionRule()); }
	 iv_rulePropertyDefinition=rulePropertyDefinition 
	 { $current=$iv_rulePropertyDefinition.current; } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPropertyDefinitionAccess().getPropertyDefinitionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getDokuDokuParserRuleCall_1_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getRuleCSSRuleOrParserRuleCall_3_0()); 
	    }
		lv_rule_3_0=ruleCSSRuleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_3_0, 
        		"CSSRuleOr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='default:' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertyDefinitionAccess().getDefaultKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getDefaultCSSDefaultValueParserRuleCall_4_1_0()); 
	    }
		lv_default_5_0=ruleCSSDefaultValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_5_0, 
        		"CSSDefaultValue");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRulePseudoClassDefinition
entryRulePseudoClassDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoClassDefinitionRule()); }
	 iv_rulePseudoClassDefinition=rulePseudoClassDefinition 
	 { $current=$iv_rulePseudoClassDefinition.current; } 
	 EOF 
;

// Rule PseudoClassDefinition
rulePseudoClassDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPseudoClassDefinitionAccess().getPseudoClassDefinitionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPseudoClassDefinitionAccess().getDokuDokuParserRuleCall_1_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPseudoClassDefinitionRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_2_0=RULE_PSEUDO
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPseudoClassDefinitionAccess().getNamePSEUDOTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoClassDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"PSEUDO");
	    }

)
))
;





// Entry rule entryRuleCSSRuleRef
entryRuleCSSRuleRef returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleRefRule()); }
	 iv_ruleCSSRuleRef=ruleCSSRuleRef 
	 { $current=$iv_ruleCSSRuleRef.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleRef
ruleCSSRuleRef returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleRefAccess().getDokuDokuParserRuleCall_0_0_0()); 
	    }
		lv_doku_0_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleRefRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_0_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getCSSRuleRefAccess().getWSTerminalRuleCall_0_1()); 
    }
)*)?	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCSSRuleRefAccess().getLessThanSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRuleRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleRefAccess().getRefDefinitionCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCSSRuleRefAccess().getGreaterThanSignKeyword_3());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleDefinition
entryRuleCSSRuleDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleDefinitionRule()); }
	 iv_ruleCSSRuleDefinition=ruleCSSRuleDefinition 
	 { $current=$iv_ruleCSSRuleDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleDefinition
ruleCSSRuleDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleDefinitionAccess().getCSSRuleDefinitionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleDefinitionAccess().getDokuDokuParserRuleCall_1_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleDefinitionRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCSSRuleDefinitionAccess().getEqualsSignKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleDefinitionAccess().getRuleCSSRuleOrParserRuleCall_4_0_0()); 
	    }
		lv_rule_4_0=ruleCSSRuleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleDefinitionRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_4_0, 
        		"CSSRuleOr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleDefinitionAccess().getFuncCSSRuleFuncParserRuleCall_4_1_0()); 
	    }
		lv_func_5_0=ruleCSSRuleFunc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleDefinitionRule());
	        }
       		set(
       			$current, 
       			"func",
        		lv_func_5_0, 
        		"CSSRuleFunc");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCSSRuleDefinitionAccess().getSemicolonKeyword_5());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleFunc
entryRuleCSSRuleFunc returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleFuncRule()); }
	 iv_ruleCSSRuleFunc=ruleCSSRuleFunc 
	 { $current=$iv_ruleCSSRuleFunc.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleFunc
ruleCSSRuleFunc returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleFuncAccess().getCSSRuleFuncAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleFuncAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleFuncRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCSSRuleFuncAccess().getLeftParenthesisKeyword_2());
    }
(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getCSSRuleFuncAccess().getWSTerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleFuncAccess().getParamsCSSRuleOrParserRuleCall_4_0()); 
	    }
		lv_params_4_0=ruleCSSRuleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleFuncRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"CSSRuleOr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCSSRuleFuncAccess().getRightParenthesisKeyword_5());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleOr
entryRuleCSSRuleOr returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleOrRule()); }
	 iv_ruleCSSRuleOr=ruleCSSRuleOr 
	 { $current=$iv_ruleCSSRuleOr.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleOr
ruleCSSRuleOr returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRuleOrAccess().getCSSRuleXorParserRuleCall_0()); 
    }
    this_CSSRuleXor_0=ruleCSSRuleXor
    { 
        $current = $this_CSSRuleXor_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCSSRuleOrAccess().getCSSRuleOrOrsAction_1_0(),
            $current);
    }
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCSSRuleOrAccess().getVerticalLineKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleOrAccess().getOrsCSSRuleXorParserRuleCall_1_1_1_0()); 
	    }
		lv_ors_3_0=ruleCSSRuleXor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleOrRule());
	        }
       		add(
       			$current, 
       			"ors",
        		lv_ors_3_0, 
        		"CSSRuleXor");
	        afterParserOrEnumRuleCall();
	    }

)
))+)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleXor
entryRuleCSSRuleXor returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleXorRule()); }
	 iv_ruleCSSRuleXor=ruleCSSRuleXor 
	 { $current=$iv_ruleCSSRuleXor.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleXor
ruleCSSRuleXor returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRuleXorAccess().getCSSRuleConcatParserRuleCall_0()); 
    }
    this_CSSRuleConcat_0=ruleCSSRuleConcat
    { 
        $current = $this_CSSRuleConcat_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCSSRuleXorAccess().getCSSRuleXorXorsAction_1_0(),
            $current);
    }
)(	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCSSRuleXorAccess().getVerticalLineVerticalLineKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleXorAccess().getXorsCSSRuleConcatParserRuleCall_1_1_1_0()); 
	    }
		lv_xors_3_0=ruleCSSRuleConcat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleXorRule());
	        }
       		add(
       			$current, 
       			"xors",
        		lv_xors_3_0, 
        		"CSSRuleConcat");
	        afterParserOrEnumRuleCall();
	    }

)
))+)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleConcat
entryRuleCSSRuleConcat returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleConcatRule()); }
	 iv_ruleCSSRuleConcat=ruleCSSRuleConcat 
	 { $current=$iv_ruleCSSRuleConcat.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleConcat
ruleCSSRuleConcat returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRuleConcatAccess().getCSSRuleConcatWithoutSpaceParserRuleCall_0()); 
    }
    this_CSSRuleConcatWithoutSpace_0=ruleCSSRuleConcatWithoutSpace
    { 
        $current = $this_CSSRuleConcatWithoutSpace_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCSSRuleConcatAccess().getCSSRuleConcatConcAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleConcatAccess().getConcCSSRuleConcatWithoutSpaceParserRuleCall_1_1_0()); 
	    }
		lv_conc_2_0=ruleCSSRuleConcatWithoutSpace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleConcatRule());
	        }
       		add(
       			$current, 
       			"conc",
        		lv_conc_2_0, 
        		"CSSRuleConcatWithoutSpace");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleConcatWithoutSpace
entryRuleCSSRuleConcatWithoutSpace returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleConcatWithoutSpaceRule()); }
	 iv_ruleCSSRuleConcatWithoutSpace=ruleCSSRuleConcatWithoutSpace 
	 { $current=$iv_ruleCSSRuleConcatWithoutSpace.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleConcatWithoutSpace
ruleCSSRuleConcatWithoutSpace returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRuleConcatWithoutSpaceAccess().getCSSRulePostfixParserRuleCall_0()); 
    }
    this_CSSRulePostfix_0=ruleCSSRulePostfix
    { 
        $current = $this_CSSRulePostfix_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCSSRuleConcatWithoutSpaceAccess().getCSSRuleConcatWithoutSpaceConcAction_1_0(),
            $current);
    }
)(	otherlv_2='~' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCSSRuleConcatWithoutSpaceAccess().getTildeKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleConcatWithoutSpaceAccess().getConcCSSRulePostfixParserRuleCall_1_1_1_0()); 
	    }
		lv_conc_3_0=ruleCSSRulePostfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleConcatWithoutSpaceRule());
	        }
       		add(
       			$current, 
       			"conc",
        		lv_conc_3_0, 
        		"CSSRulePostfix");
	        afterParserOrEnumRuleCall();
	    }

)
))+)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRulePostfix
entryRuleCSSRulePostfix returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRulePostfixRule()); }
	 iv_ruleCSSRulePostfix=ruleCSSRulePostfix 
	 { $current=$iv_ruleCSSRulePostfix.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRulePostfix
ruleCSSRulePostfix returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRulePostfixAccess().getCSSRulePrimaryParserRuleCall_0()); 
    }
    this_CSSRulePrimary_0=ruleCSSRulePrimary
    { 
        $current = $this_CSSRulePrimary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCSSRulePostfixAccess().getCSSRulePostfixRuleAction_1_0(),
            $current);
    }
)(
(
(
		lv_cardinality_2_1=	'*' 
    {
        newLeafNode(lv_cardinality_2_1, grammarAccess.getCSSRulePostfixAccess().getCardinalityAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRulePostfixRule());
	        }
       		setWithLastConsumed($current, "cardinality", lv_cardinality_2_1, null);
	    }

    |		lv_cardinality_2_2=	'+' 
    {
        newLeafNode(lv_cardinality_2_2, grammarAccess.getCSSRulePostfixAccess().getCardinalityPlusSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRulePostfixRule());
	        }
       		setWithLastConsumed($current, "cardinality", lv_cardinality_2_2, null);
	    }

    |		lv_cardinality_2_3=	'?' 
    {
        newLeafNode(lv_cardinality_2_3, grammarAccess.getCSSRulePostfixAccess().getCardinalityQuestionMarkKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRulePostfixRule());
	        }
       		setWithLastConsumed($current, "cardinality", lv_cardinality_2_3, null);
	    }

)

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleBracket
entryRuleCSSRuleBracket returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleBracketRule()); }
	 iv_ruleCSSRuleBracket=ruleCSSRuleBracket 
	 { $current=$iv_ruleCSSRuleBracket.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleBracket
ruleCSSRuleBracket returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleBracketAccess().getCSSRuleBracketAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCSSRuleBracketAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleBracketAccess().getInnerCSSRuleOrParserRuleCall_2_0()); 
	    }
		lv_inner_2_0=ruleCSSRuleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleBracketRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_2_0, 
        		"CSSRuleOr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCSSRuleBracketAccess().getRightSquareBracketKeyword_3());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRulePrimary
entryRuleCSSRulePrimary returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRulePrimaryRule()); }
	 iv_ruleCSSRulePrimary=ruleCSSRulePrimary 
	 { $current=$iv_ruleCSSRulePrimary.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRulePrimary
ruleCSSRulePrimary returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleRefParserRuleCall_0()); 
    }
    this_CSSRuleRef_0=ruleCSSRuleRef
    { 
        $current = $this_CSSRuleRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleBracketParserRuleCall_1()); 
    }
    this_CSSRuleBracket_1=ruleCSSRuleBracket
    { 
        $current = $this_CSSRuleBracket_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleLiteralParserRuleCall_2()); 
    }
    this_CSSRuleLiteral_2=ruleCSSRuleLiteral
    { 
        $current = $this_CSSRuleLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleSymbolParserRuleCall_3()); 
    }
    this_CSSRuleSymbol_3=ruleCSSRuleSymbol
    { 
        $current = $this_CSSRuleSymbol_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSBaseTypeParserRuleCall_4()); 
    }
    this_CSSBaseType_4=ruleCSSBaseType
    { 
        $current = $this_CSSBaseType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleRegexParserRuleCall_5()); 
    }
    this_CSSRuleRegex_5=ruleCSSRuleRegex
    { 
        $current = $this_CSSRuleRegex_5.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRulePrimaryAccess().getCSSNumLiteralAction_6_0(),
            $current);
    }
)(
(
		lv_value_7_0=RULE_INT
		{
			newLeafNode(lv_value_7_0, grammarAccess.getCSSRulePrimaryAccess().getValueINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRulePrimaryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"INT");
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleRegex
entryRuleCSSRuleRegex returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCSSRuleRegexRule()); }
	 iv_ruleCSSRuleRegex=ruleCSSRuleRegex 
	 { $current=$iv_ruleCSSRuleRegex.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleRegex
ruleCSSRuleRegex returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleRegexAccess().getCSSRuleRegexAction_0(),
            $current);
    }
)(
(
		lv_regex_1_0=RULE_REGEX
		{
			newLeafNode(lv_regex_1_0, grammarAccess.getCSSRuleRegexAccess().getRegexREGEXTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRuleRegexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regex",
        		lv_regex_1_0, 
        		"REGEX");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCSSRuleLiteral
entryRuleCSSRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSRuleLiteralRule()); }
	 iv_ruleCSSRuleLiteral=ruleCSSRuleLiteral 
	 { $current=$iv_ruleCSSRuleLiteral.current; } 
	 EOF 
;

// Rule CSSRuleLiteral
ruleCSSRuleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleLiteralAccess().getCSSRuleLiteralAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleLiteralAccess().getDokuDokuParserRuleCall_1_0_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleLiteralRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getCSSRuleLiteralAccess().getWSTerminalRuleCall_1_1()); 
    }
)*)?(
(
		lv_value_3_0=RULE_ID
		{
			newLeafNode(lv_value_3_0, grammarAccess.getCSSRuleLiteralAccess().getValueIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRuleLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleCSSRuleSymbol
entryRuleCSSRuleSymbol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSRuleSymbolRule()); }
	 iv_ruleCSSRuleSymbol=ruleCSSRuleSymbol 
	 { $current=$iv_ruleCSSRuleSymbol.current; } 
	 EOF 
;

// Rule CSSRuleSymbol
ruleCSSRuleSymbol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSRuleSymbolAccess().getCSSRuleSymbolAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCSSRuleSymbolAccess().getDokuDokuParserRuleCall_1_0_0()); 
	    }
		lv_doku_1_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRuleSymbolRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_1_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getCSSRuleSymbolAccess().getWSTerminalRuleCall_1_1()); 
    }
)*)?(
(
(
		lv_symbol_3_1=	',' 
    {
        newLeafNode(lv_symbol_3_1, grammarAccess.getCSSRuleSymbolAccess().getSymbolCommaKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRuleSymbolRule());
	        }
       		setWithLastConsumed($current, "symbol", lv_symbol_3_1, null);
	    }

    |		lv_symbol_3_2=	'%' 
    {
        newLeafNode(lv_symbol_3_2, grammarAccess.getCSSRuleSymbolAccess().getSymbolPercentSignKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSRuleSymbolRule());
	        }
       		setWithLastConsumed($current, "symbol", lv_symbol_3_2, null);
	    }

)

)
))
;





// Entry rule entryRuleCSSDefaultValue
entryRuleCSSDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSDefaultValueRule()); }
	 iv_ruleCSSDefaultValue=ruleCSSDefaultValue 
	 { $current=$iv_ruleCSSDefaultValue.current; } 
	 EOF 
;

// Rule CSSDefaultValue
ruleCSSDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCSSDefaultValueAccess().getCSSDefaultValueAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSDefaultValueAccess().getValCSSRuleLiteralParserRuleCall_0_1_0()); 
	    }
		lv_val_1_0=ruleCSSRuleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSDefaultValueRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"CSSRuleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_ival_2_0=RULE_INT
		{
			newLeafNode(lv_ival_2_0, grammarAccess.getCSSDefaultValueAccess().getIvalINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSDefaultValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ival",
        		lv_ival_2_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_dval_3_0=RULE_DOUBLE
		{
			newLeafNode(lv_dval_3_0, grammarAccess.getCSSDefaultValueAccess().getDvalDOUBLETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSDefaultValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dval",
        		lv_dval_3_0, 
        		"DOUBLE");
	    }

)
)
    |(
(
		lv_sval_4_0=RULE_STRING
		{
			newLeafNode(lv_sval_4_0, grammarAccess.getCSSDefaultValueAccess().getSvalSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSDefaultValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sval",
        		lv_sval_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSubstructureSelector
entryRuleSubstructureSelector returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSubstructureSelectorRule()); }
	 iv_ruleSubstructureSelector=ruleSubstructureSelector 
	 { $current=$iv_ruleSubstructureSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SubstructureSelector
ruleSubstructureSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubstructureSelectorAccess().getSubstructureSelectorAction_0(),
            $current);
    }
)(
(
		lv_selectorName_1_0=RULE_ID
		{
			newLeafNode(lv_selectorName_1_0, grammarAccess.getSubstructureSelectorAccess().getSelectorNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubstructureSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"selectorName",
        		lv_selectorName_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubstructureSelectorAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_var_3_0=RULE_ID
		{
			newLeafNode(lv_var_3_0, grammarAccess.getSubstructureSelectorAccess().getVarIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubstructureSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"var",
        		lv_var_3_0, 
        		"ID");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubstructureSelectorAccess().getRightSquareBracketKeyword_2_2());
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSubstructure
entryRuleSubstructure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubstructureRule()); }
	 iv_ruleSubstructure=ruleSubstructure 
	 { $current=$iv_ruleSubstructure.current; } 
	 EOF 
;

// Rule Substructure
ruleSubstructure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubstructureAccess().getDokuDokuParserRuleCall_0_0()); 
	    }
		lv_doku_0_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubstructureRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_0_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='substructure' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubstructureAccess().getSubstructureKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSubstructureAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubstructureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubstructureAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubstructureAccess().getChildsSubstructureStyleclassParserRuleCall_4_0()); 
	    }
		lv_childs_4_0=ruleSubstructureStyleclass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubstructureRule());
	        }
       		add(
       			$current, 
       			"childs",
        		lv_childs_4_0, 
        		"SubstructureStyleclass");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSubstructureAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSubstructureStyleclass
entryRuleSubstructureStyleclass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubstructureStyleclassRule()); }
	 iv_ruleSubstructureStyleclass=ruleSubstructureStyleclass 
	 { $current=$iv_ruleSubstructureStyleclass.current; } 
	 EOF 
;

// Rule SubstructureStyleclass
ruleSubstructureStyleclass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubstructureStyleclassAccess().getDokuDokuParserRuleCall_0_0()); 
	    }
		lv_doku_0_0=ruleDoku		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubstructureStyleclassRule());
	        }
       		set(
       			$current, 
       			"doku",
        		lv_doku_0_0, 
        		"Doku");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubstructureStyleclassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubstructureStyleclassAccess().getElementElementDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='styleclass' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubstructureStyleclassAccess().getStyleclassKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubstructureStyleclassAccess().getSelectorsSubstructureSelectorParserRuleCall_3_0()); 
	    }
		lv_selectors_3_0=ruleSubstructureSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubstructureStyleclassRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_3_0, 
        		"SubstructureSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubstructureStyleclassAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubstructureStyleclassAccess().getChildsSubstructureStyleclassParserRuleCall_4_1_0()); 
	    }
		lv_childs_5_0=ruleSubstructureStyleclass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubstructureStyleclassRule());
	        }
       		add(
       			$current, 
       			"childs",
        		lv_childs_5_0, 
        		"SubstructureStyleclass");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubstructureStyleclassAccess().getRightCurlyBracketKeyword_4_2());
    }
)?)
;





RULE_PSEUDO : ':' ~(' ') RULE_ID;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_JDOC : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : '-'? ('0'..'9')+;

RULE_DOUBLE : '-'? ('0'..'9')* '.' ('0'..'9')+;

RULE_REGEX : '$' ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|','|'.'|'?'|'\''|':'|'"'|'>'|'<'|'/'|'_'|'='|';'|'('|')'|'&'|'!'|'#'|'%'|'*'|'+'|'['|']'|'{'|'}')+ '$';

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


